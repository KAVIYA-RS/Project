module memory(clk,rst,addr,wdata,rdata,write);
  input clk,rst;
  input [31:0] addr;//addr max supports 8*1024*1024*1024

  input [31:0] wdata;
  output reg [31:0]rdata;
   input write;
 // reg[8*1024*1024*1024 :1]a;
  reg [31:0] a[268435456:0];
  integer i;
  
  always@(posedge clk)
    begin
      if(rst==1)begin
        rdata=0;
        for(i=0;i<100;i=i+1)
          begin
          a[i]=0;
      end
      end
     else begin
       if(write==1)
       begin
         a[addr]=wdata;
       end
       if(write==0)
         begin
           rdata=a[addr];
         end
     end
  end
endmodule

module top;
  reg clk,rst;
  reg[31:0] addr;//addr max supports 8*1024*1024*1024

  reg [31:0] wdata;
  wire [31:0]rdata;
  reg write;
  memory bug(clk,rst,addr,wdata,rdata,write);
  
  
  initial begin
    clk=0;
    forever #5 clk=~clk;
  end
  
  initial begin
    rst=1;
    #15;
    rst=0;
  end
  initial begin
    #20;
    write=1;
    wdata=15;
    addr=1;
    
   /*#10;
    write=1;
    wdata=5;
    addr=2;
    
    #10;
    write=1;
    wdata=90;
    addr=3;*/
    
    #10;
    rst=1;
    #10;
    rst=0;
    write=0;
    addr=1;
    #10;
    $display("rdata=%d",rdata);
    #10;
    $finish;
  end
  
 initial begin
  $dumpfile("dump.vcd");
  $dumpvars;
end   
endmodule
